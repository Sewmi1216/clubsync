// Generated by view binder compiler. Do not edit!
package com.example.clubsync.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.clubsync.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button club1;

  @NonNull
  public final Button club2;

  @NonNull
  public final Button club3;

  @NonNull
  public final Button club4;

  @NonNull
  public final Button club5;

  @NonNull
  public final Button club6;

  @NonNull
  public final Button club7;

  private FragmentHomeBinding(@NonNull RelativeLayout rootView, @NonNull Button club1,
      @NonNull Button club2, @NonNull Button club3, @NonNull Button club4, @NonNull Button club5,
      @NonNull Button club6, @NonNull Button club7) {
    this.rootView = rootView;
    this.club1 = club1;
    this.club2 = club2;
    this.club3 = club3;
    this.club4 = club4;
    this.club5 = club5;
    this.club6 = club6;
    this.club7 = club7;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.club1;
      Button club1 = ViewBindings.findChildViewById(rootView, id);
      if (club1 == null) {
        break missingId;
      }

      id = R.id.club2;
      Button club2 = ViewBindings.findChildViewById(rootView, id);
      if (club2 == null) {
        break missingId;
      }

      id = R.id.club3;
      Button club3 = ViewBindings.findChildViewById(rootView, id);
      if (club3 == null) {
        break missingId;
      }

      id = R.id.club4;
      Button club4 = ViewBindings.findChildViewById(rootView, id);
      if (club4 == null) {
        break missingId;
      }

      id = R.id.club5;
      Button club5 = ViewBindings.findChildViewById(rootView, id);
      if (club5 == null) {
        break missingId;
      }

      id = R.id.club6;
      Button club6 = ViewBindings.findChildViewById(rootView, id);
      if (club6 == null) {
        break missingId;
      }

      id = R.id.club7;
      Button club7 = ViewBindings.findChildViewById(rootView, id);
      if (club7 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((RelativeLayout) rootView, club1, club2, club3, club4, club5,
          club6, club7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
