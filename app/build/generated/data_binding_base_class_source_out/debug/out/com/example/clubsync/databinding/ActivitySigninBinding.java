// Generated by view binder compiler. Do not edit!
package com.example.clubsync.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.clubsync.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySigninBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView SigninTextView;

  @NonNull
  public final TextView newUserGuid;

  @NonNull
  public final TextView password;

  @NonNull
  public final EditText passwordInput;

  @NonNull
  public final Button signinButton;

  @NonNull
  public final TextView uniID;

  @NonNull
  public final EditText uniIDInput;

  private ActivitySigninBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView SigninTextView, @NonNull TextView newUserGuid, @NonNull TextView password,
      @NonNull EditText passwordInput, @NonNull Button signinButton, @NonNull TextView uniID,
      @NonNull EditText uniIDInput) {
    this.rootView = rootView;
    this.SigninTextView = SigninTextView;
    this.newUserGuid = newUserGuid;
    this.password = password;
    this.passwordInput = passwordInput;
    this.signinButton = signinButton;
    this.uniID = uniID;
    this.uniIDInput = uniIDInput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySigninBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SigninTextView;
      TextView SigninTextView = ViewBindings.findChildViewById(rootView, id);
      if (SigninTextView == null) {
        break missingId;
      }

      id = R.id.newUserGuid;
      TextView newUserGuid = ViewBindings.findChildViewById(rootView, id);
      if (newUserGuid == null) {
        break missingId;
      }

      id = R.id.password;
      TextView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      EditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.signinButton;
      Button signinButton = ViewBindings.findChildViewById(rootView, id);
      if (signinButton == null) {
        break missingId;
      }

      id = R.id.uniID;
      TextView uniID = ViewBindings.findChildViewById(rootView, id);
      if (uniID == null) {
        break missingId;
      }

      id = R.id.uniIDInput;
      EditText uniIDInput = ViewBindings.findChildViewById(rootView, id);
      if (uniIDInput == null) {
        break missingId;
      }

      return new ActivitySigninBinding((ConstraintLayout) rootView, SigninTextView, newUserGuid,
          password, passwordInput, signinButton, uniID, uniIDInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
